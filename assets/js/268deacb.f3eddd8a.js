"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1811],{72145:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>i,default:()=>m,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var a=n(85893),l=n(11151);const t={sidebar_label:"ollama",title:"oai.ollama"},i=void 0,o={id:"reference/oai/ollama",title:"oai.ollama",description:"Create an OpenAI-compatible client using Ollama's API.",source:"@site/docs/reference/oai/ollama.md",sourceDirName:"reference/oai",slug:"/reference/oai/ollama",permalink:"/autogen/docs/reference/oai/ollama",draft:!1,unlisted:!1,editUrl:"https://github.com/autogenhub/autogen/edit/main/website/docs/reference/oai/ollama.md",tags:[],version:"current",frontMatter:{sidebar_label:"ollama",title:"oai.ollama"},sidebar:"referenceSideBar",previous:{title:"mistral",permalink:"/autogen/docs/reference/oai/mistral"},next:{title:"openai_utils",permalink:"/autogen/docs/reference/oai/openai_utils"}},r={},c=[{value:"OllamaClient",id:"ollamaclient",level:2},{value:"__init__",id:"__init__",level:3},{value:"message_retrieval",id:"message_retrieval",level:3},{value:"get_usage",id:"get_usage",level:3},{value:"parse_params",id:"parse_params",level:3},{value:"oai_messages_to_ollama_messages",id:"oai_messages_to_ollama_messages",level:3},{value:"response_to_tool_call",id:"response_to_tool_call",level:3},{value:"is_valid_tool_call_item",id:"is_valid_tool_call_item",level:3}];function d(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"Create an OpenAI-compatible client using Ollama's API."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(s.p,{children:"llm_config={"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.code,{children:'"config_list"'})," - [{"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.code,{children:'"api_type"'}),' - "ollama",']}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.code,{children:'"model"'}),' - "mistral:7b-instruct-v0.3-q6_K"\n}\n]}']}),"\n",(0,a.jsx)(s.p,{children:'agent = autogen.AssistantAgent("my_agent", llm_config=llm_config)'}),"\n",(0,a.jsx)(s.p,{children:"Install Ollama's python library using: pip install --upgrade ollama\nInstall fix-busted-json library: pip install --upgrade fix-busted-json"}),"\n",(0,a.jsx)(s.p,{children:"Resources:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://github.com/ollama/ollama-python",children:"https://github.com/ollama/ollama-python"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"ollamaclient",children:"OllamaClient"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"class OllamaClient()\n"})}),"\n",(0,a.jsx)(s.p,{children:"Client for Ollama's API."}),"\n",(0,a.jsx)(s.h3,{id:"__init__",children:"__init__"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def __init__(**kwargs)\n"})}),"\n",(0,a.jsx)(s.p,{children:"Note that no api_key or environment variable is required for Ollama."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Arguments"}),":"]}),"\n",(0,a.jsx)(s.p,{children:"None"}),"\n",(0,a.jsx)(s.h3,{id:"message_retrieval",children:"message_retrieval"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def message_retrieval(response) -> List\n"})}),"\n",(0,a.jsx)(s.p,{children:"Retrieve and return a list of strings or a list of Choice.Message from the response."}),"\n",(0,a.jsx)(s.p,{children:"NOTE: if a list of Choice.Message is returned, it currently needs to contain the fields of OpenAI's ChatCompletion Message object,\nsince that is expected for function or tool calling in the rest of the codebase at the moment, unless a custom agent is being used."}),"\n",(0,a.jsx)(s.h3,{id:"get_usage",children:"get_usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"@staticmethod\ndef get_usage(response) -> Dict\n"})}),"\n",(0,a.jsx)(s.p,{children:"Return usage summary of the response using RESPONSE_USAGE_KEYS."}),"\n",(0,a.jsx)(s.h3,{id:"parse_params",children:"parse_params"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def parse_params(params: Dict[str, Any]) -> Dict[str, Any]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Loads the parameters for Ollama API from the passed in parameters and returns a validated set. Checks types, ranges, and sets defaults"}),"\n",(0,a.jsx)(s.h3,{id:"oai_messages_to_ollama_messages",children:"oai_messages_to_ollama_messages"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def oai_messages_to_ollama_messages(messages: list[Dict[str, Any]],\n                                    tools: list) -> list[dict[str, Any]]\n"})}),"\n",(0,a.jsx)(s.p,{children:"Convert messages from OAI format to Ollama's format.\nWe correct for any specific role orders and types, and convert tools to messages (as Ollama can't use tool messages)"}),"\n",(0,a.jsx)(s.h3,{id:"response_to_tool_call",children:"response_to_tool_call"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def response_to_tool_call(response_string: str) -> Any\n"})}),"\n",(0,a.jsx)(s.p,{children:"Attempts to convert the response to an object, aimed to align with function format [{},{}]"}),"\n",(0,a.jsx)(s.h3,{id:"is_valid_tool_call_item",children:"is_valid_tool_call_item"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"def is_valid_tool_call_item(call_item: dict) -> bool\n"})}),"\n",(0,a.jsx)(s.p,{children:"Check that a dictionary item has at least 'name', optionally 'arguments' and no other keys to match a tool call JSON"})]})}function m(e={}){const{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>i});var a=n(67294);const l={},t=a.createContext(l);function i(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);