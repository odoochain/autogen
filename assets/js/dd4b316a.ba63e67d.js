"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3314],{96125:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var r=n(85893),a=n(11151);const t={sidebar_label:"cerebras",title:"oai.cerebras"},i=void 0,c={id:"reference/oai/cerebras",title:"oai.cerebras",description:"Create an OpenAI-compatible client using Cerebras's API.",source:"@site/docs/reference/oai/cerebras.md",sourceDirName:"reference/oai",slug:"/reference/oai/cerebras",permalink:"/autogen/docs/reference/oai/cerebras",draft:!1,unlisted:!1,editUrl:"https://github.com/autogenhub/autogen/edit/main/website/docs/reference/oai/cerebras.md",tags:[],version:"current",frontMatter:{sidebar_label:"cerebras",title:"oai.cerebras"},sidebar:"referenceSideBar",previous:{title:"bedrock",permalink:"/autogen/docs/reference/oai/bedrock"},next:{title:"client",permalink:"/autogen/docs/reference/oai/client"}},l={},o=[{value:"CerebrasClient",id:"cerebrasclient",level:2},{value:"__init__",id:"__init__",level:3},{value:"message_retrieval",id:"message_retrieval",level:3},{value:"get_usage",id:"get_usage",level:3},{value:"parse_params",id:"parse_params",level:3},{value:"oai_messages_to_cerebras_messages",id:"oai_messages_to_cerebras_messages",level:3},{value:"calculate_cerebras_cost",id:"calculate_cerebras_cost",level:3}];function d(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Create an OpenAI-compatible client using Cerebras's API."}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Example"}),":"]}),"\n",(0,r.jsx)(s.p,{children:"llm_config={"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:'"config_list"'})," - [{"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:'"api_type"'}),' - "cerebras",']}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:'"model"'}),' - "llama3.1-8b",']}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:'"api_key"'}),' - os.environ.get("CEREBRAS_API_KEY")\n}]\n}']}),"\n",(0,r.jsx)(s.p,{children:'agent = autogen.AssistantAgent("my_agent", llm_config=llm_config)'}),"\n",(0,r.jsx)(s.p,{children:"Install Cerebras's python library using: pip install --upgrade cerebras_cloud_sdk"}),"\n",(0,r.jsx)(s.p,{children:"Resources:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://inference-docs.cerebras.ai/quickstart",children:"https://inference-docs.cerebras.ai/quickstart"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"cerebrasclient",children:"CerebrasClient"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"class CerebrasClient()\n"})}),"\n",(0,r.jsx)(s.p,{children:"Client for Cerebras's API."}),"\n",(0,r.jsx)(s.h3,{id:"__init__",children:"__init__"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def __init__(api_key=None, **kwargs)\n"})}),"\n",(0,r.jsx)(s.p,{children:"Requires api_key or environment variable to be set"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"api_key"})," ",(0,r.jsx)(s.em,{children:"str"})," - The API key for using Cerebras (or environment variable CEREBRAS_API_KEY needs to be set)"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"message_retrieval",children:"message_retrieval"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def message_retrieval(response: ChatCompletion) -> List\n"})}),"\n",(0,r.jsx)(s.p,{children:"Retrieve and return a list of strings or a list of Choice.Message from the response."}),"\n",(0,r.jsx)(s.p,{children:"NOTE: if a list of Choice.Message is returned, it currently needs to contain the fields of OpenAI's ChatCompletion Message object,\nsince that is expected for function or tool calling in the rest of the codebase at the moment, unless a custom agent is being used."}),"\n",(0,r.jsx)(s.h3,{id:"get_usage",children:"get_usage"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"@staticmethod\ndef get_usage(response: ChatCompletion) -> Dict\n"})}),"\n",(0,r.jsx)(s.p,{children:"Return usage summary of the response using RESPONSE_USAGE_KEYS."}),"\n",(0,r.jsx)(s.h3,{id:"parse_params",children:"parse_params"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def parse_params(params: Dict[str, Any]) -> Dict[str, Any]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Loads the parameters for Cerebras API from the passed in parameters and returns a validated set. Checks types, ranges, and sets defaults"}),"\n",(0,r.jsx)(s.h3,{id:"oai_messages_to_cerebras_messages",children:"oai_messages_to_cerebras_messages"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def oai_messages_to_cerebras_messages(\n        messages: list[Dict[str, Any]]) -> list[dict[str, Any]]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Convert messages from OAI format to Cerebras's format.\nWe correct for any specific role orders and types."}),"\n",(0,r.jsx)(s.h3,{id:"calculate_cerebras_cost",children:"calculate_cerebras_cost"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def calculate_cerebras_cost(input_tokens: int, output_tokens: int,\n                            model: str) -> float\n"})}),"\n",(0,r.jsx)(s.p,{children:"Calculate the cost of the completion using the Cerebras pricing."})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>i});var r=n(67294);const a={},t=r.createContext(a);function i(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);